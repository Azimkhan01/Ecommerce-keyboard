# version: "3.9"

services:
  redis-stack:
    image: redis/redis-stack:latest
    container_name: ecommerce-webapp-redis-stack
    ports:
      - "6379:6379"   # Redis port
      - "8001:8001"   # Redis Stack UI (optional)
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s

  user-service:
    build: ./server/user-service
    container_name: user-service
    ports:
      - "3001:3001"

  inventory:
    build: ./server/inventory
    container_name: inventory
    ports:
      - "3002:3002"
    depends_on:
      redis-stack:
        condition: service_healthy
    environment:
      REDIS_HOST: redis-stack
      REDIS_PORT: 6379

  seller:
    build: ./server/seller
    container_name: seller
    ports:
      - "3003:3003"

  client:
    build: ./client
    container_name: client
    ports:
      - "3000:3000"

  minio:
    image: quay.io/minio/minio
    container_name: ecommerce-webapp-minio
    ports:
      - "9000:9000"   # MinIO API
      - "9001:9001"   # MinIO Console
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: admin123
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"

volumes:
  redis_data:
  minio_data:
